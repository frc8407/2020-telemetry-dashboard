/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  SparkMaxData,
} from './components/spark-max-info-small/spark-max-info-small';
import {
  VictorSPXData,
} from './components/victor-spx-info-small/victor-spx-info-small';
import {
  SparkMaxData as SparkMaxData1,
} from './components/spark-max-info-small/spark-max-info-small';
import {
  VictorSPXData as VictorSPXData1,
} from './components/victor-spx-info-small/victor-spx-info-small';

export namespace Components {
  interface AppRoot {}
  interface BatteryTelemetry {
    'data': { voltage: number };
  }
  interface DrivetrainTelemetry {
    'backLeftControllerData': SparkMaxData;
    'backRightControllerData': SparkMaxData;
    'frontLeftControllerData': SparkMaxData;
    'frontRightControllerData': SparkMaxData;
    'gyroData': { yaw: number };
    'leftControllerData': SparkMaxData;
    'rightControllerData': SparkMaxData;
  }
  interface GyroInfoSmall {
    'data': { yaw: number };
  }
  interface IntakeTelemetry {
    'indexerData': VictorSPXData;
    'innerIntakeData': VictorSPXData;
    'outerIntakeData': VictorSPXData;
  }
  interface KeyValueText {
    'color': string;
    'reversed': boolean;
    'units': string;
    'value': number;
  }
  interface ShooterTelemetry {
    'leftShooterData': SparkMaxData;
    'rightShooterData': SparkMaxData;
  }
  interface SparkMaxInfoSmall {
    'alignRight': boolean;
    'data': SparkMaxData;
    'name': string;
  }
  interface VictorSpxInfoSmall {
    'alignRight': boolean;
    'data': VictorSPXData;
    'name': string;
  }
}

declare global {


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLBatteryTelemetryElement extends Components.BatteryTelemetry, HTMLStencilElement {}
  var HTMLBatteryTelemetryElement: {
    prototype: HTMLBatteryTelemetryElement;
    new (): HTMLBatteryTelemetryElement;
  };

  interface HTMLDrivetrainTelemetryElement extends Components.DrivetrainTelemetry, HTMLStencilElement {}
  var HTMLDrivetrainTelemetryElement: {
    prototype: HTMLDrivetrainTelemetryElement;
    new (): HTMLDrivetrainTelemetryElement;
  };

  interface HTMLGyroInfoSmallElement extends Components.GyroInfoSmall, HTMLStencilElement {}
  var HTMLGyroInfoSmallElement: {
    prototype: HTMLGyroInfoSmallElement;
    new (): HTMLGyroInfoSmallElement;
  };

  interface HTMLIntakeTelemetryElement extends Components.IntakeTelemetry, HTMLStencilElement {}
  var HTMLIntakeTelemetryElement: {
    prototype: HTMLIntakeTelemetryElement;
    new (): HTMLIntakeTelemetryElement;
  };

  interface HTMLKeyValueTextElement extends Components.KeyValueText, HTMLStencilElement {}
  var HTMLKeyValueTextElement: {
    prototype: HTMLKeyValueTextElement;
    new (): HTMLKeyValueTextElement;
  };

  interface HTMLShooterTelemetryElement extends Components.ShooterTelemetry, HTMLStencilElement {}
  var HTMLShooterTelemetryElement: {
    prototype: HTMLShooterTelemetryElement;
    new (): HTMLShooterTelemetryElement;
  };

  interface HTMLSparkMaxInfoSmallElement extends Components.SparkMaxInfoSmall, HTMLStencilElement {}
  var HTMLSparkMaxInfoSmallElement: {
    prototype: HTMLSparkMaxInfoSmallElement;
    new (): HTMLSparkMaxInfoSmallElement;
  };

  interface HTMLVictorSpxInfoSmallElement extends Components.VictorSpxInfoSmall, HTMLStencilElement {}
  var HTMLVictorSpxInfoSmallElement: {
    prototype: HTMLVictorSpxInfoSmallElement;
    new (): HTMLVictorSpxInfoSmallElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'battery-telemetry': HTMLBatteryTelemetryElement;
    'drivetrain-telemetry': HTMLDrivetrainTelemetryElement;
    'gyro-info-small': HTMLGyroInfoSmallElement;
    'intake-telemetry': HTMLIntakeTelemetryElement;
    'key-value-text': HTMLKeyValueTextElement;
    'shooter-telemetry': HTMLShooterTelemetryElement;
    'spark-max-info-small': HTMLSparkMaxInfoSmallElement;
    'victor-spx-info-small': HTMLVictorSpxInfoSmallElement;
  }
}

declare namespace LocalJSX {
  interface AppRoot {}
  interface BatteryTelemetry {
    'data'?: { voltage: number };
  }
  interface DrivetrainTelemetry {
    'backLeftControllerData'?: SparkMaxData;
    'backRightControllerData'?: SparkMaxData;
    'frontLeftControllerData'?: SparkMaxData;
    'frontRightControllerData'?: SparkMaxData;
    'gyroData'?: { yaw: number };
    'leftControllerData'?: SparkMaxData;
    'rightControllerData'?: SparkMaxData;
  }
  interface GyroInfoSmall {
    'data'?: { yaw: number };
  }
  interface IntakeTelemetry {
    'indexerData'?: VictorSPXData;
    'innerIntakeData'?: VictorSPXData;
    'outerIntakeData'?: VictorSPXData;
  }
  interface KeyValueText {
    'color'?: string;
    'reversed'?: boolean;
    'units'?: string;
    'value'?: number;
  }
  interface ShooterTelemetry {
    'leftShooterData'?: SparkMaxData;
    'rightShooterData'?: SparkMaxData;
  }
  interface SparkMaxInfoSmall {
    'alignRight'?: boolean;
    'data'?: SparkMaxData;
    'name'?: string;
  }
  interface VictorSpxInfoSmall {
    'alignRight'?: boolean;
    'data'?: VictorSPXData;
    'name'?: string;
  }

  interface IntrinsicElements {
    'app-root': AppRoot;
    'battery-telemetry': BatteryTelemetry;
    'drivetrain-telemetry': DrivetrainTelemetry;
    'gyro-info-small': GyroInfoSmall;
    'intake-telemetry': IntakeTelemetry;
    'key-value-text': KeyValueText;
    'shooter-telemetry': ShooterTelemetry;
    'spark-max-info-small': SparkMaxInfoSmall;
    'victor-spx-info-small': VictorSpxInfoSmall;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'battery-telemetry': LocalJSX.BatteryTelemetry & JSXBase.HTMLAttributes<HTMLBatteryTelemetryElement>;
      'drivetrain-telemetry': LocalJSX.DrivetrainTelemetry & JSXBase.HTMLAttributes<HTMLDrivetrainTelemetryElement>;
      'gyro-info-small': LocalJSX.GyroInfoSmall & JSXBase.HTMLAttributes<HTMLGyroInfoSmallElement>;
      'intake-telemetry': LocalJSX.IntakeTelemetry & JSXBase.HTMLAttributes<HTMLIntakeTelemetryElement>;
      'key-value-text': LocalJSX.KeyValueText & JSXBase.HTMLAttributes<HTMLKeyValueTextElement>;
      'shooter-telemetry': LocalJSX.ShooterTelemetry & JSXBase.HTMLAttributes<HTMLShooterTelemetryElement>;
      'spark-max-info-small': LocalJSX.SparkMaxInfoSmall & JSXBase.HTMLAttributes<HTMLSparkMaxInfoSmallElement>;
      'victor-spx-info-small': LocalJSX.VictorSpxInfoSmall & JSXBase.HTMLAttributes<HTMLVictorSpxInfoSmallElement>;
    }
  }
}


